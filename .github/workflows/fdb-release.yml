# This is a basic workflow to help you get started with Actions

name: Build branches

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # “At 05:00 on Sunday.”
  # https://crontab.guru/#0_5_*_*_0
  schedule:
  - cron: "0 5 * * 0"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Building FDB
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: foundationdb/build:centos7-latest

    strategy:
      matrix:
        branch: ["release-7.1"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: disk space
        run: df -h

      - name: list
        run: du -h --max-depth=1 /

      - name: disk space
        run: df -h

      - name: git clone
        run: git clone https://github.com/apple/foundationdb.git
        working-directory: /root

      - name: git checkout
        run: git checkout $FDB_BRANCH
        working-directory: /root/foundationdb
        env:
          FDB_BRANCH: ${{ matrix.branch }}

      - name: mkdir build_output
        run: mkdir build_output
        working-directory: /root

      - name: cmake
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && cmake -G Ninja ../foundationdb
        working-directory: /root/build_output

      - name: ninja
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && ninja -j2
        working-directory: /root/build_output

      - name: list size
        run: du -skh *
        working-directory: /root/build_output

      # job is hitting some disk space issues:
      # `You are running out of disk space. The runner will stop working when the machine runs out of disk space. Free space left: 0 MB`
      # We need to cleanup things to be able to build the docker image
      - name: remove fdbserver folder
        run: rm -rf fdbserver
        working-directory: /root/build_output

      - name: cpack TGZ
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && cpack -G TGZ
        working-directory: /root/build_output

      - name: cpack DEB
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && cpack -G DEB
        working-directory: /root/build_output

      - name: build doc
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable &&  ninja documentation/package_html
        working-directory: /root/build_output


      - name: change tag for Docker
        # transform tag_base="foundationdb/" in tag_base="ghcr.io/pierrez"
        run: sed -i 's#"foundationdb/"#"ghcr.io/pierrez/"#' build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      - name: enable docker push on build-images.sh if needed
        run: sed -i 's#push_docker_images="false"#push_docker_images="true"#' build-images.sh
        working-directory: /root/foundationdb/packaging/docker
        if: github.event_name != 'pull_request'

      - name: Login to GitHub Container Registry if needed
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: pierrez
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      # reason: remove required aws call even if we are not using aws
      - name: comment aws calls
        run: sed -i 's/aws_account_id/# aws_account_id/' build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      # reason: remove warning
      - name: comment exit 1
        run: sed -i 's/exit 1$/# exit 1/' build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      # reason: fix path
      - name: change build_output for Docker
        run: sed -i 's#"${script_dir}/../../"#"/root/build_output"#' ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      # reason: avoid pulling release from official website and pull local builds
      - name: change to unstripped_local for Docker
        run: sed -i 's#stripped_binaries_and_from_where="stripped_local"#stripped_binaries_and_from_where="unstripped_local"#' ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      - name: git clone fdb@master
        run: git clone https://github.com/apple/foundationdb.git
        working-directory: /tmp

      # reason: release branches does not have fdbkubernetesmonitor
      - name: copy fdbkubernetesmonitor@master to right folder
        run: cp -r /tmp/foundationdb/fdbkubernetesmonitor /root/foundationdb/packaging/docker/fdbkubernetesmonitor
        working-directory: /root/foundationdb/packaging/docker


      # reason: https://github.com/FoundationDB/YCSB.git not available for mortals
      - name: remove ycsb from image list
        run: sed -i "s/    'ycsb'/# 'ycsb'/" ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      # reason: not needed
      - name: remove sidecar from image list
        run: sed -i "s/    'foundationdb-kubernetes-sidecar'/# 'foundationdb-kubernetes-sidecar'/" ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      - name: add prerelease on Docker tags
        run: sed -i 's#image_tag="${tag_base}${image}:${fdb_version}"#image_tag="${tag_base}${image}:${fdb_version}-prerelease"#' ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      - name: verify build-images for debugging purpose
        run: cat ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker

      - name: build docker images
        run: ./build-images.sh
        working-directory: /root/foundationdb/packaging/docker
        env:
          TERM: xterm-color
          USER: gh-action

      - name: list docker images
        run: docker images

      - name: list packages folder
        run: find .
        working-directory: /root/build_output/packages

      - name: upload foundationdb-clients deb
        uses: actions/upload-artifact@v2
        with:
          name: foundationdb-clients_${{ matrix.branch }}.PRERELEASE_amd64.deb
          path: /root/build_output/packages/foundationdb-clients*_amd64.deb
          if-no-files-found: error
          retention-days: 10

      - name: upload foundationdb-clients targz
        uses: actions/upload-artifact@v2
        with:
          name: foundationdb-clients_${{ matrix.branch }}.PRERELEASE.x86_64.tar.gz
          path: /root/build_output/packages/foundationdb-clients*.x86_64.tar.gz
          if-no-files-found: error
          retention-days: 10

      - name: upload foundationdb-server deb
        uses: actions/upload-artifact@v2
        with:
          name: foundationdb-server_${{ matrix.branch }}.PRERELEASE_amd64.deb
          path: /root/build_output/packages/foundationdb-server*_amd64.deb
          if-no-files-found: error
          retention-days: 10

      - name: upload foundationdb-server targz
        uses: actions/upload-artifact@v2
        with:
          name: foundationdb-server_${{ matrix.branch }}.PRERELEASE.x86_64.tar.gz
          path: /root/build_output/packages/foundationdb-server*.x86_64.tar.gz
          if-no-files-found: error
          retention-days: 10

      - name: upload doc
        uses: actions/upload-artifact@v2
        with:
          name: foundationdb-docs_${{ matrix.branch }}.PRERELEASE.tar.gz
          path: /root/build_output/packages/foundationdb-docs-*.tar.gz
          if-no-files-found: error
          retention-days: 10
